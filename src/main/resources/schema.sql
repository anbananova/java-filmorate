DROP TABLE IF EXISTS film_genre;
DROP TABLE IF EXISTS film_rating;
DROP TABLE IF EXISTS genres;
DROP TABLE IF EXISTS likes;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS ratings;
DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS users;

CREATE TABLE IF NOT EXISTS users(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	email CHARACTER VARYING(50) NOT NULL,
	login CHARACTER VARYING(30) NOT NULL,
	name CHARACTER VARYING(30),
	birthday DATE NOT NULL,
	CONSTRAINT CHK_NotBlank CHECK (email <> '' AND login <> ''),
	CONSTRAINT CHK_birthday CHECK (birthday <= NOW())
);

CREATE TABLE IF NOT EXISTS friends(
	user_id INTEGER NOT NULL REFERENCES users(id),
	friend_id INTEGER NOT NULL REFERENCES users(id),
	friendship_status CHARACTER VARYING(30) DEFAULT 'UNACCEPTED',
	last_updated TIMESTAMP DEFAULT NOW(),
	PRIMARY KEY (user_id, friend_id),
	CONSTRAINT CHK_friendship_status CHECK (friendship_status IN ('UNACCEPTED','ACCEPTED'))
);

CREATE TABLE IF NOT EXISTS ratings(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name CHARACTER VARYING(5) NOT NULL,
	CONSTRAINT CHK_name CHECK (name IN ('G', 'PG', 'PG-13', 'R', 'NC-17'))
);

CREATE TABLE IF NOT EXISTS films(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name CHARACTER VARYING(50) NOT NULL,
	description CHARACTER VARYING(200),
	release_date DATE NOT NULL,
	duration INTEGER,
	CONSTRAINT CHK_NotBlankFilms CHECK (name <> ''),
	CONSTRAINT CHK_Duration CHECK (duration >= 0),
	CONSTRAINT CHK_release_date CHECK (release_date >= '1895-12-28')
);

CREATE TABLE IF NOT EXISTS likes(
	user_id INTEGER NOT NULL REFERENCES users(id),
	film_id INTEGER NOT NULL REFERENCES films(id),
	last_updated TIMESTAMP DEFAULT NOW(),
	PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS genres(
	id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name CHARACTER VARYING(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genre(
	film_id INTEGER NOT NULL REFERENCES films(id),
	genre_id INTEGER NOT NULL REFERENCES genres(id),
	last_updated TIMESTAMP DEFAULT NOW(),
	PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS film_rating(
	film_id INTEGER NOT NULL REFERENCES films(id),
	rating_id INTEGER NOT NULL REFERENCES ratings(id),
	last_updated TIMESTAMP DEFAULT NOW(),
	PRIMARY KEY (film_id, rating_id)
);